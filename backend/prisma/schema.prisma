// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id             String    @id @default(uuid())
    email          String    @unique
    password       String
    name           String
    bio            String?
    age            Int
    gender         String
    location       String?
    createdAt      DateTime  @default(now())
    updatedAt      DateTime  @updatedAt
    profileImage   String?
    traitEmbedding Json? // Store vector embeddings as JSON
    matches        Match[]   @relation("UserMatches")
    matchedWith    Match[]   @relation("MatchedWith")
    messages       Message[]
    sentMessages   Message[] @relation("SentMessages")
}

model Match {
    id            String    @id @default(uuid())
    userId        String
    matchedUserId String
    score         Float // Compatibility score
    createdAt     DateTime  @default(now())
    user          User      @relation("UserMatches", fields: [userId], references: [id])
    matchedUser   User      @relation("MatchedWith", fields: [matchedUserId], references: [id])
    messages      Message[]
}

model Message {
    id        String   @id @default(uuid())
    content   String
    senderId  String
    matchId   String
    createdAt DateTime @default(now())
    sentiment Float? // Sentiment score from -1 to 1
    toxicity  Float? // Toxicity score from 0 to 1
    sender    User     @relation("SentMessages", fields: [senderId], references: [id])
    match     Match    @relation(fields: [matchId], references: [id])
    User      User?    @relation(fields: [userId], references: [id])
    userId    String?
}
